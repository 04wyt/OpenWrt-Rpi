#=================================================
# https://github.com/P3TERX/Actions-OpenWrt
# Description: Build OpenWrt using GitHub Actions
# Lisence: MIT
# Author: P3TERX
# Blog: https://p3terx.com
#=================================================

name: Build Raspberry Pi 4 Offical OpenWrt

on: 
  release:
    types: [published]
  push:
    branches: 
      - master
    paths:
      - 'config/rpi4-offical-openwrt.config'
  schedule:
    - cron: 0 18 * * *
#  watch:
#    types: [started]

env:
  REPO_URL: https://github.com/openwrt/openwrt
  REPO_BRANCH: master
  CONFIG_FILE: config/rpi4-offical-openwrt.config
  DIY_SH: scripts/offical-openwrt.sh
  DOWNLOAD_URL_FILE: Tmp-Link-Url.txt
  TZ: Asia/Shanghai
  TARGET: bcm27xx
  SUBTARGET: bcm2711
  DEVICE: openwrt-bcm27xx-bcm2711-rpi-4
  SSH_ACTIONS: false
  UPLOAD_EXT4_IMAGES: true
  UPLOAD_SQUASHFS_IMAGES: true
  UPLOAD_ROOTFS: true
  UPLOAD_WETRANSFER: true
  UPLOAD_COWTRANSFER: true


jobs:
  build:
    runs-on: ubuntu-latest
    if: github.event.repository.owner.id == github.event.sender.id

    steps:
    - name: Checkout
      uses: actions/checkout@master

    - name: Initialization Environment
      env:
        DEBIAN_FRONTEND: noninteractive
      run: |
        sudo swapoff /swapfile
        sudo rm -rf /swapfile /etc/apt/sources.list.d/* /usr/share/dotnet /usr/local/lib/android /opt/ghc
        sudo -E apt-get -qq update
        sudo -E apt-get -qq install build-essential asciidoc binutils bzip2 gawk gettext git libncurses5-dev libz-dev patch unzip zlib1g-dev lib32gcc1 libc6-dev-i386 subversion flex uglifyjs git-core gcc-multilib g++-multilib p7zip p7zip-full msmtp libssl-dev texinfo libglib2.0-dev xmlto qemu-utils upx libelf-dev autoconf automake libtool autopoint device-tree-compiler gperf antlr3
        curl -fsSL https://raw.githubusercontent.com/P3TERX/dotfiles/master/.bashrc >> ~/.bashrc

    - name: Clone Source Code
      run: |
        git clone $REPO_URL -b $REPO_BRANCH openwrt
        
    - name: Update Feeds
      run: |
       cd openwrt
       sed -i 's/luci.git/luci.git\;openwrt-19.07/g' feeds.conf.default
       ./scripts/feeds update -a

    - name: Install Feeds
      run: cd openwrt && ./scripts/feeds install -a
      
    - name: Load Custom Configuration
      run: |
        [ -e files ] && mv files openwrt/files
        [ -e $CONFIG_FILE ] && mv $CONFIG_FILE openwrt/.config
        chmod +x $DIY_SH
        cd openwrt
        ../$DIY_SH
        git checkout f4da28c301890115e5c6b632aa6550fbc59f8e24 package/libs/elfutils
        make defconfig

    - name: Bind Folders
      run: |
        cd openwrt
        mkdir -p bin/targets/$TARGET/$SUBTARGET/packages
        mkdir -p files/www/snapshots/targets/$TARGET/$SUBTARGET/packages
        sudo mount --bind bin/targets/$TARGET/$SUBTARGET/packages files/www/snapshots/targets/$TARGET/$SUBTARGET/packages
        cp scripts/ipkg-make-index.sh files/www/snapshots
        sed -i "s/.*sha256sum=.*/\tsha256sum=$\(sha256sum \$pkg \| awk '{ print \$1 }'\)"/g files/www/snapshots/ipkg-make-index.sh
        
    - name: SSH Connection To Actions
      uses: P3TERX/debugger-action@master
      if: env.SSH_ACTIONS == 'true'

    - name: Download Package
      id: package
      run: |
        cd openwrt
        make download -j8
        find dl -size -1024c -exec ls -l {} \;
        find dl -size -1024c -exec rm -f {} \;

    - name: Compile The Firmware
      id: compile
      run: |
        cd openwrt
        echo -e "$(nproc) thread compile"
        make -j$(nproc) IGNORE_ERRORS=1 || make -j1 V=s IGNORE_ERRORS=1
        echo "::set-output name=status::success"

    - name: Extract Gz Files
      if: steps.compile.outputs.status == 'success'
      run: |
        cd openwrt/bin/targets/$TARGET/$SUBTARGET
        gzip -qdc $DEVICE-squashfs-factory.img.gz > $DEVICE-squashfs-factory.img || true
        gzip -qdc $DEVICE-squashfs-sysupgrade.img.gz > $DEVICE-squashfs-sysupgrade.img || true
        gzip -qdc $DEVICE-ext4-factory.img.gz > $DEVICE-ext4-factory.img || true
        gzip -qdc $DEVICE-ext4-sysupgrade.img.gz > $DEVICE-ext4-sysupgrade.img || true
        
    - name: Generate Sha256sum File For Images
      if: steps.compile.outputs.status == 'success'
      run: |
        cd openwrt/bin/targets/$TARGET/$SUBTARGET
        mv sha256sums sha256sums.orig
        sha256sum *.img > sha256sums
        
    - name: Arrange Packages
      if: steps.compile.outputs.status == 'success'
      run: |
        cd openwrt/bin
        mkdir -p targets/$TARGET/$SUBTARGET/pre-snapshots/snapshots
        mkdir -p targets/$TARGET/$SUBTARGET/pre-snapshots/snapshots/targets/$TARGET/$SUBTARGET
        cp -r packages targets/$TARGET/$SUBTARGET/pre-snapshots/snapshots
        cp -r targets/$TARGET/$SUBTARGET/packages targets/$TARGET/$SUBTARGET/pre-snapshots/snapshots/targets/$TARGET/$SUBTARGET
        zip -q -r targets/$TARGET/$SUBTARGET/packages.zip targets/$TARGET/$SUBTARGET/pre-snapshots/snapshots
        mkdir -p targets/$TARGET/$SUBTARGET/pre-packages-server
        cp -r ../../server targets/$TARGET/$SUBTARGET/pre-packages-server
        cd targets/$TARGET/$SUBTARGET
        cp -r pre-snapshots/snapshots pre-packages-server/server/web
        zip -q -r packages-server.zip pre-packages-server/server
        
    - name: Upload Config
      uses: actions/upload-artifact@master
      if: steps.compile.outputs.status == 'success'
      with:
        name: config.buildinfo
        path: openwrt/bin/targets/${{ env.TARGET }}/${{ env.SUBTARGET }}/config.buildinfo
        
    - name: Upload Packages
      uses: actions/upload-artifact@master
      if: steps.compile.outputs.status == 'success'
      with:
        name: packages
        path: openwrt/bin/targets/${{ env.TARGET }}/${{ env.SUBTARGET }}/pre-snapshots
        
    - name: Upload Packages-Server
      uses: actions/upload-artifact@master
      if: steps.compile.outputs.status == 'success'
      with:
        name: packages-server
        path: openwrt/bin/targets/${{ env.TARGET }}/${{ env.SUBTARGET }}/pre-packages-server
        
    - name: Upload Packages Info
      uses: actions/upload-artifact@master
      if: steps.compile.outputs.status == 'success'
      with:
        name: ${{ env.DEVICE }}.manifest
        path: openwrt/bin/targets/${{ env.TARGET }}/${{ env.SUBTARGET }}/${{ env.DEVICE }}.manifest
        
    - name: Upload RootFS Archive
      uses: actions/upload-artifact@master
      if: steps.compile.outputs.status == 'success' && env.UPLOAD_ROOTFS == 'true'
      with:
        name: ${{ env.DEVICE }}-rootfs.tar.gz
        path: openwrt/bin/targets/${{ env.TARGET }}/${{ env.SUBTARGET }}/${{ env.DEVICE }}-rootfs.tar.gz
        
    - name: Upload SquashFS Factory Image
      uses: actions/upload-artifact@master
      if: steps.compile.outputs.status == 'success' && env.UPLOAD_SQUASHFS_IMAGES == 'true'
      with:
        name: ${{ env.DEVICE }}-squashfs-factory.img
        path: openwrt/bin/targets/${{ env.TARGET }}/${{ env.SUBTARGET }}/${{ env.DEVICE }}-squashfs-factory.img
        
    - name: Upload SquashFS Sysupgrade Image
      uses: actions/upload-artifact@master
      if: steps.compile.outputs.status == 'success' && env.UPLOAD_SQUASHFS_IMAGES == 'true'
      with:
        name: ${{ env.DEVICE }}-squashfs-sysupgrade.img
        path: openwrt/bin/targets/${{ env.TARGET }}/${{ env.SUBTARGET }}/${{ env.DEVICE }}-squashfs-sysupgrade.img
        
    - name: Upload Ext4 Factory Image
      uses: actions/upload-artifact@master
      if: steps.compile.outputs.status == 'success' && env.UPLOAD_EXT4_IMAGES == 'true'
      with:
        name: ${{ env.DEVICE }}-ext4-factory.img
        path: openwrt/bin/targets/${{ env.TARGET }}/${{ env.SUBTARGET }}/${{ env.DEVICE }}-ext4-factory.img
        
    - name: Upload Ext4 Sysupgrade Image
      uses: actions/upload-artifact@master
      if: steps.compile.outputs.status == 'success' && env.UPLOAD_EXT4_IMAGES == 'true'
      with:
        name: ${{ env.DEVICE }}-ext4-sysupgrade.img
        path: openwrt/bin/targets/${{ env.TARGET }}/${{ env.SUBTARGET }}/${{ env.DEVICE }}-ext4-sysupgrade.img

    - name: Upload Images Sha256sums
      uses: actions/upload-artifact@master
      if: steps.compile.outputs.status == 'success'
      with:
        name: sha256sums
        path: openwrt/bin/targets/${{ env.TARGET }}/${{ env.SUBTARGET }}/sha256sums
        
    - name: Organize Files
      id: organize
      if: steps.compile.outputs.status == 'success' && !cancelled()
      run: |
        cd openwrt/bin/targets/*/*
        rm -rf packages pre-packages-server pre-snapshots
        rm -f *.img
        echo "::set-env name=FIRMWARE::$PWD"
        echo "::set-output name=status::success"

    - name: Upload Firmware to Cowtransfer
      if: steps.organize.outputs.status == 'success' && env.UPLOAD_COWTRANSFER == 'true' && !cancelled()
      run: |
        curl -fsSL git.io/file-transfer | sh
        ./transfer cow --block 2621440 -s -p 99 -t 3 --hash --no-progress ${FIRMWARE} 2>&1 | tee cowtransfer.log
        echo "::warning file=cowtransfer.com::$(cat cowtransfer.log | grep https)"

    - name: Upload Firmware to WeTransfer
      if: steps.organize.outputs.status == 'success' && env.UPLOAD_WETRANSFER == 'true' && !cancelled()
      run: |
        curl -fsSL git.io/file-transfer | sh
        ./transfer wet -s -p 16 --no-progress ${FIRMWARE} 2>&1 | tee wetransfer.log
        echo "::warning file=wetransfer.com::$(cat wetransfer.log | grep https)"

